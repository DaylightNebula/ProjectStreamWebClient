{"id":"basicshaders.js","dependencies":[{"name":"D:\\projectstream\\ProjectStreamWebClient\\package.json","includedInParent":true,"mtime":1659019141905}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.basicVertexShader = exports.basicFragShader = void 0;\nvar basicVertexShader = \"#version 300 es\\n \\n// an attribute is an input (in) to a vertex shader.\\n// It will receive data from a buffer\\nin vec4 a_position;\\n \\n// all shaders have a main function\\nvoid main() {\\n \\n  // gl_Position is a special variable a vertex shader\\n  // is responsible for setting\\n  gl_Position = a_position;\\n}\\n\";\nexports.basicVertexShader = basicVertexShader;\nvar basicFragShader = \"#version 300 es\\n \\n// fragment shaders don't have a default precision so we need\\n// to pick one. highp is a good default. It means \\\"high precision\\\"\\nprecision highp float;\\n \\n// we need to declare an output for the fragment shader\\nout vec4 outColor;\\n \\nvoid main() {\\n  // Just set the output to a constant reddish-purple\\n  outColor = vec4(1, 0, 0.5, 1);\\n}\\n\";\nexports.basicFragShader = basicFragShader;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"basicshaders.js","original":{"line":1,"column":7}},{"generated":{"line":7,"column":4},"source":"basicshaders.js","original":{"line":1,"column":13},"name":"basicVertexShader"},{"generated":{"line":7,"column":21},"source":"basicshaders.js","original":{"line":1,"column":30}},{"generated":{"line":7,"column":339},"source":"basicshaders.js","original":{"line":1,"column":7}},{"generated":{"line":9,"column":0},"source":"basicshaders.js","original":{"line":16,"column":7}},{"generated":{"line":9,"column":4},"source":"basicshaders.js","original":{"line":16,"column":13},"name":"basicFragShader"},{"generated":{"line":9,"column":19},"source":"basicshaders.js","original":{"line":16,"column":28}},{"generated":{"line":9,"column":391},"source":"basicshaders.js","original":{"line":16,"column":7}}],"sources":{"basicshaders.js":"export const basicVertexShader = `#version 300 es\r\n \r\n// an attribute is an input (in) to a vertex shader.\r\n// It will receive data from a buffer\r\nin vec4 a_position;\r\n \r\n// all shaders have a main function\r\nvoid main() {\r\n \r\n  // gl_Position is a special variable a vertex shader\r\n  // is responsible for setting\r\n  gl_Position = a_position;\r\n}\r\n`;\r\n \r\nexport const basicFragShader = `#version 300 es\r\n \r\n// fragment shaders don't have a default precision so we need\r\n// to pick one. highp is a good default. It means \"high precision\"\r\nprecision highp float;\r\n \r\n// we need to declare an output for the fragment shader\r\nout vec4 outColor;\r\n \r\nvoid main() {\r\n  // Just set the output to a constant reddish-purple\r\n  outColor = vec4(1, 0, 0.5, 1);\r\n}\r\n`;"},"lineCount":null}},"error":null,"hash":"a61806a75404a88fa0975b1f38f50f39","cacheData":{"env":{}}}