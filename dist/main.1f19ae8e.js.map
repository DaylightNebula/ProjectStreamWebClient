{"version":3,"sources":["shaders/basicshaders.js","mesh/basicmesh.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat2.js","../node_modules/gl-matrix/esm/mat2d.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/quat2.js","../node_modules/gl-matrix/esm/vec2.js","../node_modules/gl-matrix/esm/index.js","shaders/ShaderProgram.js","mesh/Mesh.js","textures/Texture.js","main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["vertexShaderSource","fragmentShaderSource","cubeVertices","cubeFaceColors","cubeIndices","cubeTextCoords","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","hypot","y","i","arguments","length","sqrt","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","f","tan","Infinity","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","mag1","mag2","mag","cosine","acos","zero","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","ShaderProgram","gl","name","vertexShaderText","fragShaderText","program","initShaderProgram","programInfo","attribLocations","vertexPosition","getAttribLocation","textureCoord","uniformLocations","projectionMatrix","getUniformLocation","modelViewMatrix","uSampler","console","useProgram","uniformMatrix4fv","mesh","loadIntoShader","enableProgram","loadProjectionMatrix","loadModelViewMatrix","loadTexture","vertexCount","indicesCount","UNSIGNED_SHORT","drawElements","TRIANGLES","vsSource","fsSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","Mesh","texture","vertices","uvs","indices","createVAO","textureUVs","createElementArray","bindBuffer","ARRAY_BUFFER","colors","ELEMENT_ARRAY_BUFFER","bindVertices","vertexAttribPointer","FLOAT","enableVertexAttribArray","bindTextureUVs","bindIndices","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","array","buffer","createBuffer","bufferData","STATIC_DRAW","Uint16Array","Texture","url","createTexture","level","internalFormat","RGBA","border","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","crossOrigin","isPowerOf2","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","value","FPS_OUTPUT","canvas","document","querySelector","getContext","resize","clientWidth","clientHeight","viewport","rotation","drawScene","deltaTime","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","zNear","zFar","draw","then","render","now","requestAnimationFrame","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export const vertexShaderSource = `\r\nattribute vec4 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat4 uModelViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\n\r\nvarying highp vec2 vTextureCoord;\r\n\r\nvoid main(void) {\r\n    gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\r\n    vTextureCoord = aTextureCoord;\r\n}\r\n`;\r\n \r\nexport const fragmentShaderSource = `\r\nvarying highp vec2 vTextureCoord;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void) {\r\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\r\n}\r\n`;","export const cubeVertices = [\r\n    // Front face\r\n    -1.0, -1.0,  1.0,\r\n     1.0, -1.0,  1.0,\r\n     1.0,  1.0,  1.0,\r\n    -1.0,  1.0,  1.0,\r\n  \r\n    // Back face\r\n    -1.0, -1.0, -1.0,\r\n    -1.0,  1.0, -1.0,\r\n     1.0,  1.0, -1.0,\r\n     1.0, -1.0, -1.0,\r\n  \r\n    // Top face\r\n    -1.0,  1.0, -1.0,\r\n    -1.0,  1.0,  1.0,\r\n     1.0,  1.0,  1.0,\r\n     1.0,  1.0, -1.0,\r\n  \r\n    // Bottom face\r\n    -1.0, -1.0, -1.0,\r\n     1.0, -1.0, -1.0,\r\n     1.0, -1.0,  1.0,\r\n    -1.0, -1.0,  1.0,\r\n  \r\n    // Right face\r\n     1.0, -1.0, -1.0,\r\n     1.0,  1.0, -1.0,\r\n     1.0,  1.0,  1.0,\r\n     1.0, -1.0,  1.0,\r\n  \r\n    // Left face\r\n    -1.0, -1.0, -1.0,\r\n    -1.0, -1.0,  1.0,\r\n    -1.0,  1.0,  1.0,\r\n    -1.0,  1.0, -1.0,\r\n  ];\r\n\r\nexport const cubeFaceColors = [\r\n    [1.0,  1.0,  1.0,  1.0],    // Front face: white\r\n    [1.0,  0.0,  0.0,  1.0],    // Back face: red\r\n    [0.0,  1.0,  0.0,  1.0],    // Top face: green\r\n    [0.0,  0.0,  1.0,  1.0],    // Bottom face: blue\r\n    [1.0,  1.0,  0.0,  1.0],    // Right face: yellow\r\n    [1.0,  0.0,  1.0,  1.0],    // Left face: purple\r\n];\r\n\r\nexport const cubeIndices = [\r\n  0,  1,  2,      0,  2,  3,    // front\r\n  4,  5,  6,      4,  6,  7,    // back\r\n  8,  9,  10,     8,  10, 11,   // top\r\n  12, 13, 14,     12, 14, 15,   // bottom\r\n  16, 17, 18,     16, 18, 19,   // right\r\n  20, 21, 22,     20, 22, 23,   // left\r\n];\r\n\r\nexport const cubeTextCoords = [\r\n  // Front\r\n  0.0,  0.0,\r\n  1.0,  0.0,\r\n  1.0,  1.0,\r\n  0.0,  1.0,\r\n  // Back\r\n  0.0,  0.0,\r\n  1.0,  0.0,\r\n  1.0,  1.0,\r\n  0.0,  1.0,\r\n  // Top\r\n  0.0,  0.0,\r\n  1.0,  0.0,\r\n  1.0,  1.0,\r\n  0.0,  1.0,\r\n  // Bottom\r\n  0.0,  0.0,\r\n  1.0,  0.0,\r\n  1.0,  1.0,\r\n  0.0,  1.0,\r\n  // Right\r\n  0.0,  0.0,\r\n  1.0,  0.0,\r\n  1.0,  1.0,\r\n  0.0,  1.0,\r\n  // Left\r\n  0.0,  0.0,\r\n  1.0,  0.0,\r\n  1.0,  1.0,\r\n  0.0,  1.0,\r\n];","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","export class ShaderProgram {\r\n    constructor(gl, name, vertexShaderText, fragShaderText) {\r\n        // initialize shader\r\n        this.program = initShaderProgram(gl, vertexShaderText, fragShaderText);\r\n\r\n        // get programs info containing locations of attributes and uniforms\r\n        this.programInfo = {\r\n            attribLocations: {\r\n              vertexPosition: gl.getAttribLocation(this.program, 'aVertexPosition'),\r\n              textureCoord: gl.getAttribLocation(this.program, \"aTextureCoord\"),\r\n            },\r\n            uniformLocations: {\r\n              projectionMatrix: gl.getUniformLocation(this.program, 'uProjectionMatrix'),\r\n              modelViewMatrix: gl.getUniformLocation(this.program, 'uModelViewMatrix'),\r\n              uSampler: gl.getUniformLocation(this.program, 'uSampler'),\r\n            },\r\n          };\r\n\r\n        console.log(\"Successfully created shader named \" + name);\r\n    }\r\n\r\n    enableProgram(gl) {\r\n        gl.useProgram(this.program);\r\n    }\r\n\r\n    loadProjectionMatrix(gl, projectionMatrix) {\r\n        gl.uniformMatrix4fv(this.programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    }\r\n\r\n    loadModelViewMatrix(gl, modelViewMatrix) {\r\n        gl.uniformMatrix4fv(this.programInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n    }\r\n\r\n    draw(gl, mesh, projectionMatrix, modelViewMatrix) {\r\n        mesh.loadIntoShader(gl, this);\r\n\r\n        this.enableProgram(gl);\r\n\r\n        this.loadProjectionMatrix(gl, projectionMatrix);\r\n        this.loadModelViewMatrix(gl, modelViewMatrix);\r\n\r\n        mesh.loadTexture(gl, this);\r\n\r\n        const vertexCount = mesh.indicesCount;\r\n        const type = gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n        //gl.drawElements(gl.TRIANGLES, mesh.indicesCount, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n}\r\n\r\n//\r\n// Initialize a shader program, so WebGL knows how to draw our data\r\n//\r\nfunction initShaderProgram(gl, vsSource, fsSource) {\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  \r\n    // Create the shader program\r\n  \r\n    const shaderProgram = gl.createProgram();\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n  \r\n    // If creating the shader program failed, alert\r\n  \r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n      alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n      return null;\r\n    }\r\n  \r\n    return shaderProgram;\r\n  }\r\n  \r\n  //\r\n  // creates a shader of the given type, uploads the source and\r\n  // compiles it.\r\n  //\r\n  function loadShader(gl, type, source) {\r\n    const shader = gl.createShader(type);\r\n  \r\n    // Send the source to the shader object\r\n  \r\n    gl.shaderSource(shader, source);\r\n  \r\n    // Compile the shader program\r\n  \r\n    gl.compileShader(shader);\r\n  \r\n    // See if it compiled successfully\r\n  \r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n  \r\n    return shader;\r\n  }","export class Mesh {\r\n    constructor(gl, texture, vertices, uvs, indices) {\r\n        // vertices\r\n        this.vertexCount = vertices.length / 3;\r\n        this.vertices = createVAO(gl, vertices);\r\n\r\n        // texture uvs\r\n        this.texture = texture;\r\n        this.textureUVs = createVAO(gl, uvs);\r\n\r\n        // turn colors input into a colors output\r\n        // var colorsArr = [];\r\n\r\n        // for (let j = 0; j < faceColors.length; ++j) {\r\n        //     const c = faceColors[j];\r\n\r\n        //     // Repeat each color four times for the four vertices of the face\r\n        //     colorsArr = colorsArr.concat(c, c, c, c);\r\n        // }\r\n        // this.colors = createVAO(gl, colorsArr);\r\n\r\n        // indices\r\n        this.indicesCount = indices.length;\r\n        this.indices = createElementArray(gl, indices);\r\n    }\r\n\r\n    bindVertices(gl) {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertices);\r\n    }\r\n\r\n    bindColors(gl) {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.colors);\r\n    }\r\n\r\n    bindTextureUVs(gl) {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.textureUVs);\r\n    }\r\n\r\n    bindIndices(gl) {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indices);\r\n    }\r\n\r\n    loadIntoShader(gl, shader) {\r\n        // load vertices\r\n        this.bindVertices(gl);\r\n        gl.vertexAttribPointer(shader.programInfo.attribLocations.vertexPosition, \r\n            3, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(shader.programInfo.attribLocations.vertexPosition);\r\n\r\n        // load texture coords\r\n        this.bindTextureUVs(gl);\r\n        gl.vertexAttribPointer(shader.programInfo.attribLocations.textureCoord,\r\n             2, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(shader.programInfo.attribLocations.textureCoord);\r\n\r\n        // load indices\r\n        this.bindIndices(gl);\r\n    }\r\n\r\n    loadTexture(gl, shader) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture.texture);\r\n        gl.uniform1i(shader.programInfo.uniformLocations.uSampler, 0);\r\n    }\r\n}\r\n\r\nfunction createVAO(gl, array) {\r\n    // create a vao from the given array\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\r\n    return buffer;\r\n}\r\n\r\nfunction createElementArray(gl, array) {\r\n    // create element array from the given array\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(array), gl.STATIC_DRAW);\r\n    return buffer;\r\n}","export class Texture {\r\n    constructor(gl, url) {\r\n        this.texture = loadTexture(gl, url);\r\n    }\r\n}\r\n\r\nfunction loadTexture(gl, url) {\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  \r\n    // Because images have to be download over the internet\r\n    // they might take a moment until they are ready.\r\n    // Until then put a single pixel in the texture so we can\r\n    // use it immediately. When the image has finished downloading\r\n    // we'll update the texture with the contents of the image.\r\n    const level = 0;\r\n    const internalFormat = gl.RGBA;\r\n    const width = 1;\r\n    const height = 1;\r\n    const border = 0;\r\n    const srcFormat = gl.RGBA;\r\n    const srcType = gl.UNSIGNED_BYTE;\r\n    const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      level,\r\n      internalFormat,\r\n      width,\r\n      height,\r\n      border,\r\n      srcFormat,\r\n      srcType,\r\n      pixel\r\n    );\r\n  \r\n    const image = new Image();\r\n    image.onload = function () {\r\n      image.crossOrigin = \"anonymous\";\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        level,\r\n        internalFormat,\r\n        srcFormat,\r\n        srcType,\r\n        image\r\n      );\r\n  \r\n      // WebGL1 has different requirements for power of 2 images\r\n      // vs non power of 2 images so check if the image is a\r\n      // power of 2 in both dimensions.\r\n      if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\r\n        // Yes, it's a power of 2. Generate mips.\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n      } else {\r\n        // No, it's not a power of 2. Turn of mips and set\r\n        // wrapping to clamp to edge\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n      }\r\n    };\r\n    image.src = url;\r\n  \r\n    return texture;\r\n  }\r\n  \r\n  function isPowerOf2(value) {\r\n    return (value & (value - 1)) == 0;\r\n  }","import { vertexShaderSource, fragmentShaderSource } from \"./shaders/basicshaders.js\"\nimport { cubeVertices, cubeFaceColors, cubeIndices, cubeTextCoords } from \"./mesh/basicmesh.js\"\nimport { mat4 } from \"gl-matrix\"\nimport { ShaderProgram } from \"./shaders/ShaderProgram.js\";\nimport { Mesh } from \"./mesh/Mesh.js\";\nimport { Texture } from \"./textures/Texture.js\";\n\n// options\nlet FPS_OUTPUT = false;\n\n// get canvas and webgl context\nconst canvas = document.querySelector('#canvas');\nconst gl = canvas.getContext('webgl2');\n\n// If we don't have a GL context, give up now\nif (!gl) {\n  alert('Unable to initialize WebGL. Your browser or machine may not support it.');\n  return;\n}\n\n// create basic shader\nconst shader = new ShaderProgram(gl, \"BasicShader\", vertexShaderSource, fragmentShaderSource);\n\n// load texture\nconst texture = new Texture(gl, \"./images/block.png\"/*\"https://mineblocks.com/1/wiki/images/6/67/Cobblestone.png\"*/);\n\n// load positions and colors into a mesh\nconst mesh = new Mesh(gl, texture, cubeVertices, cubeTextCoords, cubeIndices);\n\nconsole.log(\"Finished startup!\");\n\nfunction resize(gl) {\n  // resize\n  canvas.width = gl.canvas.clientWidth;\n  canvas.height = gl.canvas.clientHeight;\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n}\n\nlet rotation = 0;\nfunction drawScene(gl, shader, mesh, deltaTime) {\n  // call resize\n  resize(gl);\n\n  rotation += deltaTime;\n  if (FPS_OUTPUT) console.log(\"FPS \" + (1 / deltaTime));\n\n  // clear everything\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);                    // Clear to black, fully opaque\n  gl.clearDepth(1.0);                                   // Clear everything\n  gl.enable(gl.DEPTH_TEST);                             // Enable depth testing\n  gl.depthFunc(gl.LEQUAL);                              // Near things obscure far things\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);  // Clear color and depth bits\n\n  // create projection information\n  const fov = 45 * Math.PI / 180;\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n  const zNear = 0.1;\n  const zFar = 100.0;\n  const projectionMatrix = mat4.create();\n\n  // create projection matrix\n  mat4.perspective(projectionMatrix, fov, aspect, zNear, zFar);\n\n  // create model view matrix\n  const modelViewMatrix = mat4.create();\n  mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -6.0]);\n  mat4.rotateX(modelViewMatrix, modelViewMatrix, rotation);\n  mat4.rotateY(modelViewMatrix, modelViewMatrix, rotation);\n  mat4.rotateZ(modelViewMatrix, modelViewMatrix, rotation);\n\n  // draw mesh\n  shader.draw(gl, mesh, projectionMatrix, modelViewMatrix);\n}\n\nlet then = 0;\nfunction render(now) {\n  now *= 0.001; // convert to seconds\n  const deltaTime = now - then; // get delta time\n  then = now;  // update then time variable for delta time tracking\n\n  drawScene(gl, shader, mesh, deltaTime);\n\n  requestAnimationFrame(render);\n}\nrequestAnimationFrame(render);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}